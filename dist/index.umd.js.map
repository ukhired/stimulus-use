{"version":3,"file":"index.umd.js","sources":["../src/support/index.ts","../src/use-intersection/use-intersection.ts","../src/use-intersection/intersection-controller.ts","../src/use-lazy-load/useLazyLoad.ts","../src/use-lazy-load/lazy-load-controller.ts","../src/use-resize/use-resize.ts","../src/use-resize/resize-controller.ts","../src/use-click-outside/use-click-outside.ts","../src/use-click-outside/click-outside-controller.ts","../src/stimulus-use.ts","../src/use-dispatch/use-dispatch.ts","../src/use-application/use-application.ts","../src/use-application/application-controller.ts","../src/use-idle/use-idle.ts","../src/use-idle/idle-controller.ts","../src/use-visibility/use-visibility.ts","../src/use-visibility/visibility-controller.ts","../src/use-hover/use-hover.ts","../src/use-hover/hover-controller.ts","../src/use-mutation/use-mutation.ts","../src/use-mutation/mutation-controller.ts","../src/use-target-mutation/use-target-mutation.ts","../src/use-target-mutation/target-mutation-controller.ts","../src/use-window-resize/use-window-resize.ts","../src/use-window-resize/window-resize-controller.ts","../src/use-debounce/use-debounce.ts","../src/use-throttle/use-throttle.ts","../src/use-meta/use-meta.ts","../src/use-transition/use-transition.ts","../src/use-transition/transition-controller.ts","../src/use-memo/use-memo.ts"],"sourcesContent":["import { Controller } from 'stimulus'\n\nexport const method = (controller: Controller, methodName: string): Function => {\n  const method = (controller as any)[methodName]\n  if (typeof method == 'function') {\n    return method\n  } else {\n    return (...args: any[]) => {}\n  }\n}\n\nexport const composeEventName = (name: string, controller: Controller, eventPrefix: boolean | string) => {\n  let composedName = name\n  if (eventPrefix === true) {\n    composedName = `${controller.identifier}:${name}`\n  } else if (typeof eventPrefix === 'string') {\n    composedName = `${eventPrefix}:${name}`\n  }\n  return composedName\n}\n\nexport const extendedEvent = (type: string, event: Event | null, detail: object): CustomEvent => {\n  const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true }\n\n  if (event) {\n    Object.assign(detail, { originalEvent: event })\n  }\n\n  const customEvent = new CustomEvent(type, {\n    bubbles,\n    cancelable,\n    composed,\n    detail,\n  })\n  return customEvent\n}\n\nexport function isElementInViewport(el: Element) {\n  const rect = el.getBoundingClientRect()\n\n  const windowHeight = (window.innerHeight || document.documentElement.clientHeight)\n  const windowWidth = (window.innerWidth || document.documentElement.clientWidth)\n\n  const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 1)\n  const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 1)\n\n  return (vertInView && horInView)\n}\n\n","import { IntersectionComposableController } from './intersection-controller'\nimport { method, extendedEvent, composeEventName } from '../support/index'\n\nexport interface IntersectionOptions extends IntersectionObserverInit {\n  element?: Element\n  dispatchEvent?: boolean\n  eventPrefix?: boolean | string\n}\n\nconst defaultOptions = {\n  dispatchEvent: true,\n  eventPrefix: true,\n}\n\nexport const useIntersection = (controller: IntersectionComposableController, options: IntersectionOptions = {}) => {\n  const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options)\n  const targetElement: Element = options?.element || controller.element\n\n  const callback = (entries: IntersectionObserverEntry[]) => {\n    const [entry] = entries\n    if (entry.isIntersecting) {\n      dispatchAppear(entry)\n    } else if (controller.isVisible) {\n      dispatchDisappear(entry)\n    }\n  }\n\n  const dispatchAppear = (entry: IntersectionObserverEntry) => {\n    controller.isVisible = true\n    method(controller, 'appear').call(controller, entry)\n\n    // emit a custom \"appear\" event\n    if (dispatchEvent) {\n      const eventName = composeEventName('appear', controller, eventPrefix)\n\n      const appearEvent = extendedEvent(eventName, null, { controller, entry })\n      targetElement.dispatchEvent(appearEvent)\n    }\n  }\n\n  const dispatchDisappear = (entry: IntersectionObserverEntry) => {\n    controller.isVisible = false\n    method(controller, 'disappear').call(controller, entry)\n\n    // emit a custom \"disappear\" event\n    if (dispatchEvent) {\n      const eventName = composeEventName('disappear', controller, eventPrefix)\n\n      const disappearEvent = extendedEvent(eventName, null, { controller, entry })\n      targetElement.dispatchEvent(disappearEvent)\n    }\n  }\n\n  // keep a copy of the current disconnect() function of the controller\n  // to support composing several behaviors\n  const controllerDisconnect = controller.disconnect.bind(controller)\n\n  const observer = new IntersectionObserver(callback, options)\n\n  const observe = () => {\n    observer.observe(targetElement)\n  }\n\n  const unobserve = () => {\n    observer.unobserve(targetElement)\n  }\n\n  Object.assign(controller, {\n    isVisible: false,\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { useIntersection, IntersectionOptions } from './use-intersection'\n\nexport class IntersectionComposableController extends Controller {\n  isVisible: boolean = false\n  declare appear?: (entry: IntersectionObserverEntry) => void\n  declare disappear?: (entry: IntersectionObserverEntry) => void\n}\n\nexport class IntersectionController extends IntersectionComposableController {\n  options?: IntersectionOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useIntersection(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n\n}\n","import { LazyLoadComposableController } from './lazy-load-controller'\nimport { method } from '../support/index'\n\nexport const useLazyLoad = (controller: LazyLoadComposableController, options?: IntersectionObserverInit) => {\n  const callback = (entries: IntersectionObserverEntry[]) => {\n    const [entry] = entries\n    if (entry.isIntersecting && !controller.isLoaded) {\n      handleAppear(entry)\n    }\n  }\n\n  const handleAppear = (entry: IntersectionObserverEntry) => {\n    const src = controller.data.get('src')\n    if (!src) return\n\n    const imageElement = <HTMLImageElement>controller.element\n    controller.isLoading = true\n    method(controller, 'loading').call(controller, src)\n    imageElement.onload = () => {\n      handleLoaded(src)\n    }\n\n    imageElement.src = src\n  }\n\n  const handleLoaded = (src: string) => {\n    controller.isLoading = false\n    controller.isLoaded = true\n    method(controller, 'loaded').call(controller, src)\n  }\n\n  // keep a copy of the current disconnect() function of the controller to not override it\n  const controllerDisconnect = controller.disconnect.bind(controller)\n\n  const observer = new IntersectionObserver(callback, options)\n\n  const observe = () => {\n    observer.observe(controller.element)\n  }\n\n  const unobserve = () => {\n    observer.unobserve(controller.element)\n  }\n\n  Object.assign(controller, {\n    isVisible: false,\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { useLazyLoad } from './useLazyLoad'\n\nexport class LazyLoadComposableController extends Controller {\n  isLoading: boolean = false\n  isLoaded: boolean = false\n  declare loading?: (src: string) => void\n  declare loaded?: (src: string) => void\n}\n\nexport class LazyLoadController extends LazyLoadComposableController {\n  options: IntersectionObserverInit = { rootMargin: '10%' }\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useLazyLoad(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n\n}\n","import { composeEventName, extendedEvent, method } from '../support/index'\nimport { ResizeComposableController } from './resize-controller'\n\nexport interface ResizeOptions {\n  element?: Element\n  dispatchEvent?: boolean\n  eventPrefix?: boolean | string\n}\n\nconst defaultOptions = {\n  dispatchEvent: true,\n  eventPrefix: true,\n}\n\nexport const useResize = (controller: ResizeComposableController, options: ResizeOptions = {}) => {\n  const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options)\n  const targetElement: Element = options?.element || controller.element\n\n  const callback = (entries: ResizeObserverEntry[]) => {\n    const [entry] = entries\n    method(controller, 'resize').call(controller, entry.contentRect)\n\n    // emit a custom \"controllerIdentifier:resize\" event\n    if (dispatchEvent) {\n      const eventName = composeEventName('resize', controller, eventPrefix)\n      const appearEvent = extendedEvent(eventName, null, {\n        controller,\n        entry,\n      })\n      targetElement.dispatchEvent(appearEvent)\n    }\n  }\n\n  const controllerDisconnect = controller.disconnect.bind(controller)\n\n  const observer = new ResizeObserver(callback)\n\n  const observe = () => {\n    observer.observe(targetElement)\n  }\n  const unobserve = () => {\n    observer.unobserve(targetElement)\n  }\n\n  Object.assign(controller, {\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { useResize, ResizeOptions } from './use-resize'\n\nexport class ResizeComposableController extends Controller {\n  declare resize?: (contentRect: DOMRectReadOnly) => void\n}\n\nexport class ResizeController extends ResizeComposableController {\n  options?: ResizeOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useResize(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n}\n","import { composeEventName, extendedEvent, isElementInViewport } from '../support/index'\nimport { ClickOutsideComposableController } from './click-outside-controller'\n\nexport interface ClickOutsideOptions {\n  element?: Element\n  events?: string[]\n  onlyVisible?: boolean\n  dispatchEvent?: boolean\n  eventPrefix?: boolean | string\n}\n\nconst defaultOptions = {\n  events: ['click', 'touchend'],\n  onlyVisible: true,\n  dispatchEvent: true,\n  eventPrefix: true,\n}\n\nexport const useClickOutside = (controller: ClickOutsideComposableController, options: ClickOutsideOptions = {}) => {\n  const { onlyVisible, dispatchEvent, events, eventPrefix } = Object.assign({}, defaultOptions, options)\n\n  const onEvent = (event: Event) => {\n    const targetElement: Element = options?.element || controller.element\n\n    if (targetElement.contains(event.target as Node) || (!isElementInViewport(targetElement) && onlyVisible)) {\n      return\n    }\n\n    // call the clickOutside method of the Stimulus controller\n    if (controller.clickOutside) {\n      controller.clickOutside(event)\n    }\n\n    // emit a custom event\n    if (dispatchEvent) {\n      const eventName = composeEventName('click:outside', controller, eventPrefix)\n\n      const clickOutsideEvent = extendedEvent(eventName, event, { controller })\n      targetElement.dispatchEvent(clickOutsideEvent)\n    }\n  }\n\n  const observe = () => {\n    events?.forEach(event => {\n      window.addEventListener(event, onEvent, false)\n    })\n  }\n\n  const unobserve = () => {\n    events?.forEach(event => {\n      window.removeEventListener(event, onEvent, false)\n    })\n  }\n\n  // keep a copy of the current disconnect() function of the controller\n  // to support composing several behaviors\n  const controllerDisconnect = controller.disconnect.bind(controller)\n\n  Object.assign(controller, {\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Context, Controller } from 'stimulus'\nimport { ClickOutsideOptions, useClickOutside } from './use-click-outside'\n\nexport class ClickOutsideComposableController extends Controller {\n  declare clickOutside?: (event: Event) => void\n}\n\nexport class ClickOutsideController extends ClickOutsideComposableController {\n  options?: ClickOutsideOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useClickOutside(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n}\n","import { Controller } from 'stimulus'\nimport { Logger } from \"./logger\"\n\nexport interface StimulusUseOptions {\n  debug?: boolean\n  logger?: Logger\n  dispatchEvent?: Boolean\n  eventPrefix?: boolean | string\n  element?: Element\n}\n\nconst defaultOptions = {\n  debug: false,\n  logger: console,\n  dispatchEvent: true,\n  eventPrefix: true,\n}\n\nexport class StimulusUse {\n  controller: Controller\n  controllerInitialize: Function\n  controllerConnect: Function\n  controllerDisconnect: Function\n  debug: boolean\n  logger: Logger\n  controllerId: string | undefined\n  dispatchEvent?: Boolean\n  eventPrefix?: boolean | string\n  targetElement: Element\n\n\n  constructor(controller: Controller, options: StimulusUseOptions = {}) {\n    this.debug = options?.debug ?? (controller.application as any).stimulusUseDebug ?? defaultOptions.debug\n    this.logger = options?.logger ?? defaultOptions.logger\n    this.controller = controller\n    this.controllerId = controller.element.id || (controller.element as HTMLElement).dataset.id\n    this.targetElement = options?.element || controller.element\n\n    const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options)\n    Object.assign(this, { dispatchEvent, eventPrefix })\n\n    // make copies of lifecycle functions\n    this.controllerInitialize = controller.initialize.bind(controller)\n    this.controllerConnect = controller.connect.bind(controller)\n    this.controllerDisconnect = controller.disconnect.bind(controller)\n  }\n\n  log = (functionName: string, args: any): void => {\n    if (!this.debug) return\n\n    this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${functionName}`, 'color: #3B82F6', 'color: unset')\n    this.logger.log({\n      controllerId: this.controllerId,\n      ...args\n    })\n    this.logger.groupEnd()\n  }\n\n  dispatch = (eventName: string, details: any = {}) => {\n    if (this.dispatchEvent) {\n      const { event, ...eventDetails } = details\n      const customEvent = this.extendedEvent(eventName, event || null, eventDetails)\n      this.targetElement.dispatchEvent(customEvent)\n      this.log('dispatchEvent', { eventName: customEvent.type, ...eventDetails })\n    }\n  }\n\n  call = (methodName: string, args: any = {}) => {\n    const method = (this.controller as any)[methodName]\n    if (typeof method == 'function') {\n      return method.call(this.controller, args)\n    }\n  }\n\n  private extendedEvent = (name: string, event: Event | null, detail: object): CustomEvent => {\n    const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true }\n\n    if (event) {\n      Object.assign(detail, { originalEvent: event })\n    }\n\n    const customEvent = new CustomEvent(this.composeEventName(name), {\n      bubbles,\n      cancelable,\n      composed,\n      detail,\n    })\n    return customEvent\n  }\n\n  private composeEventName = (name: string) => {\n    let composedName = name\n    if (this.eventPrefix === true) {\n      composedName = `${this.controller.identifier}:${name}`\n    } else if (typeof this.eventPrefix === 'string') {\n      composedName = `${this.eventPrefix}:${name}`\n    }\n    return composedName\n  }\n}\n","import { composeEventName } from '../support/index'\nimport { Controller } from 'stimulus'\nimport { StimulusUse, StimulusUseOptions } from '../stimulus-use'\n\nexport interface DispatchOptions extends StimulusUseOptions {\n  element?: Element\n  eventPrefix?: boolean | string\n  bubbles?: boolean\n  cancelable?: boolean\n}\n\nconst defaultOptions = {\n  eventPrefix: true,\n  bubbles: true,\n  cancelable: true,\n}\n\nexport class UseDispatch extends StimulusUse {\n  targetElement: Element\n  eventPrefix: boolean | string\n  bubbles: boolean\n  cancelable: boolean\n\n  constructor(controller: Controller, options: DispatchOptions = {}) {\n    super(controller, options)\n\n    this.targetElement = options.element ?? controller.element\n    this.eventPrefix = options.eventPrefix ?? defaultOptions.eventPrefix\n    this.bubbles = options.bubbles ?? defaultOptions.bubbles\n    this.cancelable = options.cancelable ?? defaultOptions.cancelable\n\n    this.enhanceController()\n  }\n\n  dispatch = (eventName: string, detail = {}): CustomEvent => {\n    const { controller, targetElement, eventPrefix, bubbles, cancelable, log } = this\n\n    // includes the emitting controller in the event detail\n    Object.assign(detail, { controller })\n\n    const eventNameWithPrefix = composeEventName(eventName, this.controller, eventPrefix)\n\n    // creates the custom event\n    const event = new CustomEvent(eventNameWithPrefix, {\n      detail,\n      bubbles,\n      cancelable,\n    })\n\n    // dispatch the event from the given element or by default from the root element of the controller\n    targetElement.dispatchEvent(event)\n\n    log(\"dispatch\", { eventName: eventNameWithPrefix, detail, bubbles, cancelable })\n\n    return event\n  }\n\n  private enhanceController() {\n    Object.assign(this.controller, { dispatch: this.dispatch })\n  }\n}\n\nexport const useDispatch = (controller: Controller, options: DispatchOptions = {}): UseDispatch => {\n  return new UseDispatch(controller, options)\n}\n","import { Controller } from 'stimulus'\nimport { useDispatch, DispatchOptions } from '../use-dispatch/index'\n\nexport const useApplication = (controller: Controller, options: DispatchOptions= {}) => {\n  // getter to detect Turbolinks preview\n  Object.defineProperty(controller, 'isPreview', {\n    get(): boolean {\n      return document.documentElement.hasAttribute('data-turbolinks-preview') || document.documentElement.hasAttribute('data-turbo-preview')\n    },\n  })\n\n  // getter to get the csrf token\n  Object.defineProperty(controller, 'csrfToken', {\n    get(): boolean {\n      return this.metaValue('csrf-token')\n    },\n  })\n\n  useDispatch(controller, options)\n\n  Object.assign(controller, {\n    metaValue(name: string) {\n      const element = document.head.querySelector(`meta[name=\"${name}\"]`)\n      return element && element.getAttribute('content')\n    },\n  })\n}\n","import { Controller, Context } from 'stimulus'\nimport { useApplication } from './use-application'\nimport { DispatchOptions } from \"../use-dispatch\"\n\nexport class ApplicationController extends Controller {\n  options?: DispatchOptions\n  readonly isPreview: boolean = false\n  readonly csrfToken: string = ''\n\n\n  constructor(context: Context) {\n    super(context)\n    useApplication(this, this.options)\n  }\n\n  declare metaValue: (name: string) => string\n  declare dispatch: (eventName: String, detail: any) => void\n}\n","import { IdleComposableController } from './idle-controller'\nimport { extendedEvent, method, composeEventName } from '../support/index'\n\nconst defaultEvents = ['mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel']\nconst oneMinute = 60e3\n\nexport interface IdleOptions {\n  ms?: number\n  initialState?: boolean\n  events?: string[]\n  dispatchEvent?: boolean\n  eventPrefix?: boolean | string\n}\n\nconst defaultOptions = {\n  ms: oneMinute,\n  initialState: false,\n  events: defaultEvents,\n  dispatchEvent: true,\n  eventPrefix: true,\n}\n\nexport const useIdle = (controller: IdleComposableController, options: IdleOptions = {}) => {\n  const { ms, initialState, events, dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options)\n\n  let isIdle = initialState\n  let timeout = setTimeout(() => {\n    isIdle = true\n    dispatchAway()\n  }, ms)\n\n  const dispatchAway = (event?: Event) => {\n    const eventName = composeEventName('away', controller, eventPrefix)\n\n    controller.isIdle = true\n    method(controller, 'away').call(controller, event)\n\n    if (dispatchEvent) {\n      const clickOutsideEvent = extendedEvent(eventName, event || null, { controller })\n      controller.element.dispatchEvent(clickOutsideEvent)\n    }\n  }\n\n  const dispatchBack = (event?: Event) => {\n    const eventName = composeEventName('back', controller, eventPrefix)\n\n    controller.isIdle = false\n    method(controller, 'back').call(controller, event)\n\n    if (dispatchEvent) {\n      const clickOutsideEvent = extendedEvent(eventName, event || null, { controller })\n      controller.element.dispatchEvent(clickOutsideEvent)\n    }\n  }\n\n  const onEvent = (event: Event) => {\n    if (isIdle) dispatchBack(event)\n\n    isIdle = false\n    clearTimeout(timeout)\n\n    timeout = setTimeout(() => {\n      isIdle = true\n      dispatchAway(event)\n    }, ms)\n  }\n\n  const onVisibility = (event: Event) => {\n    if (!document.hidden) onEvent(event)\n  }\n\n  if (isIdle) {\n    dispatchAway()\n  } else {\n    dispatchBack()\n  }\n\n  const controllerDisconnect = controller.disconnect.bind(controller)\n  const observe = () => {\n    events.forEach(event => {\n      window.addEventListener(event, onEvent)\n    })\n    document.addEventListener('visibilitychange', onVisibility)\n  }\n\n  const unobserve = () => {\n    events.forEach(event => {\n      window.removeEventListener(event, onEvent)\n    })\n    document.removeEventListener('visibilitychange', onVisibility)\n  }\n\n  Object.assign(controller, {\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { IdleOptions, useIdle } from './use-idle'\n\nexport class IdleComposableController extends Controller {\n  isIdle: boolean = false\n  declare away?: () => void\n  declare back?: () => void\n}\n\nexport class IdleController extends IdleComposableController {\n  options?: IdleOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useIdle(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n\n}\n","import { StimulusUse, StimulusUseOptions } from '../stimulus-use'\nimport { VisibilityComposableController } from './visibility-controller'\n\nexport interface VisibilityOptions extends StimulusUseOptions { }\n\nexport class UseVisibility extends StimulusUse {\n  controller: VisibilityComposableController\n\n  constructor(controller: VisibilityComposableController, options: VisibilityOptions = {}) {\n    super(controller, options)\n    this.controller = controller\n    this.enhanceController()\n    this.observe()\n  }\n\n  observe = () => {\n    this.controller.isVisible = !document.hidden\n    document.addEventListener('visibilitychange', this.handleVisibilityChange)\n\n    // triggers initial callback on observe\n    this.handleVisibilityChange()\n  }\n\n  unobserve = () => {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange)\n  }\n\n  // private\n  private becomesInvisible = (event?: Event) => {\n    this.controller.isVisible = false\n\n    this.call('invisible', event)\n    this.log('invisible', { isVisible: false })\n\n    this.dispatch('invisible', { event, isVisible: false })\n  }\n\n  private becomesVisible = (event?: Event) => {\n    this.controller.isVisible = true\n\n    this.call('visible', event)\n    this.log('visible', { isVisible: true })\n\n    this.dispatch('visible', { event, isVisible: true })\n  }\n\n  private handleVisibilityChange = (event?: Event) => {\n    if (document.hidden) {\n      this.becomesInvisible(event)\n    } else {\n      this.becomesVisible(event)\n    }\n  }\n\n  private enhanceController() {\n    const controllerDisconnect = this.controllerDisconnect\n\n    const disconnect = () => {\n      this.unobserve()\n      controllerDisconnect()\n    }\n\n    Object.assign(this.controller, { disconnect })\n  }\n}\n\nexport const useVisibility = (controller: VisibilityComposableController, options: VisibilityOptions = {}) => {\n  const observer = new UseVisibility(controller, options)\n  return [observer.observe, observer.unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { useVisibility, VisibilityOptions } from './use-visibility'\n\nexport class VisibilityComposableController extends Controller {\n  isVisible: boolean = false\n  declare visible?: () => void\n  declare invisible?: () => void\n}\n\nexport class VisibilityController extends VisibilityComposableController {\n  options?: VisibilityOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useVisibility(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n}\n","import { StimulusUse, StimulusUseOptions } from '../stimulus-use'\nimport { HoverComposableController } from './hover-controller'\n\nexport interface HoverOptions extends StimulusUseOptions {\n  element?: Element\n}\n\nexport class UseHover extends StimulusUse {\n  controller: HoverComposableController\n\n  constructor(controller: HoverComposableController, options: HoverOptions = {}) {\n    super(controller, options)\n    this.controller = controller\n    this.enhanceController()\n    this.observe()\n  }\n\n  observe = () => {\n    this.targetElement.addEventListener('mouseenter', this.onEnter)\n    this.targetElement.addEventListener('mouseleave', this.onLeave)\n  }\n\n  unobserve = () => {\n    this.targetElement.removeEventListener('mouseenter', this.onEnter)\n    this.targetElement.removeEventListener('mouseleave', this.onLeave)\n  }\n\n  private onEnter = (event: Event) => {\n    this.call(\"mouseEnter\", event)\n    this.log('mouseEnter', { hover: true })\n\n    this.dispatch('mouseEnter', { hover: false })\n  }\n\n  private onLeave = (event: Event) => {\n    this.call(\"mouseLeave\", event)\n    this.log('mouseLeave', { hover: false })\n\n    this.dispatch('mouseLeave', { hover: false })\n  }\n\n  private enhanceController() {\n    const controllerDisconnect = this.controller.disconnect.bind(this.controller)\n\n    const disconnect = () => {\n      this.unobserve()\n      controllerDisconnect()\n    }\n\n    Object.assign(this.controller, { disconnect })\n  }\n}\n\nexport const useHover = (controller: HoverComposableController, options: HoverOptions = {}) => {\n  const observer = new UseHover(controller, options)\n  return [observer.observe, observer.unobserve] as const\n}\n","import { Context, Controller } from 'stimulus'\nimport { HoverOptions, useHover } from './use-hover'\n\nexport class HoverComposableController extends Controller {\n  declare mouseEnter?: () => void;\n  declare mouseLeave?: () => void;\n}\n\nexport class HoverController extends HoverComposableController {\n  options?: HoverOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useHover(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void;\n  declare unobserve: () => void;\n}\n","import { StimulusUse, StimulusUseOptions } from '../stimulus-use'\nimport { MutationComposableController } from './mutation-controller'\n\nexport interface MutationControllerOptions {\n  element?: Element\n}\n\nexport interface MutationOptions extends MutationObserverInit, MutationControllerOptions, StimulusUseOptions {\n}\n\nexport class UseMutation extends StimulusUse {\n  controller: MutationComposableController\n  observer: MutationObserver\n  targetElement: Element\n  options: MutationOptions\n\n  constructor(controller: MutationComposableController, options: MutationOptions = {}) {\n    super(controller, options)\n\n    this.targetElement = options?.element || controller.element\n    this.controller = controller\n    this.options = options\n    this.observer = new MutationObserver(this.mutation)\n\n    this.enhanceController()\n    this.observe()\n  }\n\n  observe = () => {\n    try {\n      this.observer.observe(this.targetElement, this.options)\n    } catch (error) {\n      this.controller.application.handleError(error, \"At a minimum, one of childList, attributes, and/or characterData must be true\", {})\n    }\n  }\n\n  unobserve = () => {\n    this.observer.disconnect()\n  }\n\n  private mutation = (entries: MutationRecord[]) => {\n    this.call('mutate', entries)\n    this.log('mutate', { entries })\n\n    this.dispatch(\"mutate\", { entries })\n  }\n\n  private enhanceController() {\n    const controllerDisconnect = this.controller.disconnect.bind(this.controller)\n    const disconnect = () => {\n      this.unobserve()\n      controllerDisconnect()\n    }\n    Object.assign(this.controller, { disconnect })\n  }\n}\n\nexport const useMutation = (controller: MutationComposableController, options: MutationOptions = {}) => {\n  const observer = new UseMutation(controller, options)\n  return [observer.observe, observer.unobserve] as const\n}\n","import { Context, Controller } from 'stimulus'\nimport { MutationOptions, useMutation } from './use-mutation'\n\nexport class MutationComposableController extends Controller {\n  declare mutate?: (entries: MutationRecord[]) => void\n}\n\nexport class MutationController extends MutationComposableController {\n  options?: MutationOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useMutation(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n}\n","import { StimulusUse, StimulusUseOptions } from '../stimulus-use'\nimport { method } from '../support/index'\nimport { TargetMutationComposableController } from './target-mutation-controller'\n\nexport interface TargetMutationOptions extends StimulusUseOptions {\n  targets?: string[]\n}\n\nexport class UseTargetMutation extends StimulusUse {\n  controller: TargetMutationComposableController\n  observer: MutationObserver\n  identifier: string\n  identifierPrefix: string\n  targets: string[]\n  prefixedTargets: string[]\n  options: TargetMutationOptions\n  targetSelector: string\n  scopedTargetSelector: string\n\n  constructor(controller: TargetMutationComposableController, options: TargetMutationOptions = {}) {\n    super(controller, options)\n\n    this.controller = controller\n    this.options = options\n    this.targetElement = controller.element\n    this.identifier = controller.scope.identifier\n    this.identifierPrefix = `${this.identifier}.`\n    this.targetSelector = controller.scope.schema.targetAttribute\n    this.scopedTargetSelector = `data-${this.identifier}-target` //TODO: If/When stimulus 2.0 adds the identifier scoped targetAttribute to the schema, use that here instead\n    // @ts-ignore\n    this.targets = options.targets || controller.constructor.targets\n    this.prefixedTargets = this.targets.map((target) => `${this.identifierPrefix}${target}`)\n    this.observer = new MutationObserver(this.mutation)\n\n    this.enhanceController()\n    this.observe()\n  }\n\n  observe = () => {\n    this.observer.observe(\n      this.targetElement,\n      {\n        subtree: true,\n        characterData: true,\n        childList: true,\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [this.targetSelector, this.scopedTargetSelector]\n      }\n    )\n  }\n\n  unobserve = () => {\n    this.observer.disconnect()\n  }\n\n  mutation = (entries: MutationRecord[]) => {\n    for (const mutation of entries) {\n      switch (mutation.type) {\n        case 'attributes':\n          let newValue = (mutation.target as Element).getAttribute(mutation.attributeName as string)\n          let oldValue = mutation.oldValue\n\n          // If this was an attribute change, and the attribute change resulted in a target changing\n          if (mutation.attributeName === this.targetSelector || mutation.attributeName === this.scopedTargetSelector) {\n            // Filter out any targets that don't belong to this controller\n            let oldTargets = this.targetsUsedByThisController(oldValue)\n            let newTargets = this.targetsUsedByThisController(newValue)\n            let removedTargets = oldTargets.filter(target => !newTargets.includes(target)) // Get only the oldTargets that dont occur in newTargets, thus, removed\n            let addedTargets = newTargets.filter(target => !oldTargets.includes(target)) // Get only the newTargets that dont occur in oldTargets - thus, added\n            // Fire updates for each changed target on the controller\n            removedTargets.forEach(target => this.targetRemoved(this.stripIdentifierPrefix(target), mutation.target, 'attributeChange'))\n            addedTargets.forEach(target => this.targetAdded(this.stripIdentifierPrefix(target), mutation.target, 'attributeChange'))\n          }\n\n          break\n        case 'characterData':\n          let nodule = this.findTargetInAncestry(mutation.target)\n          if (nodule == null) {\n            return\n          } else {\n            let supportedTargets = this.targetsUsedByThisControllerFromNode(nodule)\n            supportedTargets.forEach((target: string) => {\n              this.targetChanged(this.stripIdentifierPrefix(target), nodule!, 'domMutation')\n            })\n          }\n          break\n        case 'childList':\n          let { addedNodes, removedNodes } = mutation\n          addedNodes.forEach((node: Node) => this.processNodeDOMMutation(node, this.targetAdded))\n          removedNodes.forEach((node: Node) => this.processNodeDOMMutation(node, this.targetRemoved))\n          break\n      }\n    }\n  }\n\n  private processNodeDOMMutation(node: Node, initialChangeModeAssumption: (name: string, node: Node, trigger: string) => void) {\n    let nodule: Node | null = node\n    let change = initialChangeModeAssumption\n    let supportedTargets: string[] = []\n    if (nodule.nodeName == '#text' || this.targetsUsedByThisControllerFromNode(nodule).length == 0) {\n      change = this.targetChanged\n      nodule = this.findTargetInAncestry(node)\n    } else {\n      supportedTargets = this.targetsUsedByThisControllerFromNode(nodule)\n    }\n    if (nodule == null) {\n      return\n    } else if (supportedTargets.length == 0) {\n      supportedTargets = this.targetsUsedByThisControllerFromNode(nodule)\n    }\n\n    supportedTargets.forEach((target: string) => {\n      change.call(this, this.stripIdentifierPrefix(target), nodule!, 'domMutation')\n    })\n  }\n\n  private findTargetInAncestry(node: Node): Node | null {\n    let nodule = node\n    let supportedTargets: string[] = []\n    if (nodule.nodeName != '#text') {\n      supportedTargets = this.targetsUsedByThisControllerFromNode(nodule)\n    } else {\n    }\n\n    // Traverse up the node tree until we find a target, or the controller root element\n    while (nodule.parentNode !== null && nodule.parentNode != this.targetElement && supportedTargets.length == 0) {\n      nodule = nodule.parentNode\n      if (nodule.nodeName !== '#text') {\n        let supportedTargets = this.targetsUsedByThisControllerFromNode(nodule)\n        if (supportedTargets.length > 0) {\n          // If this node has one of the watched targets on it, it's the one we want\n          return nodule\n        } else {\n        }\n      }\n    }\n    if (nodule.nodeName == '#text') {\n      return null\n    }\n    if (nodule.parentNode == null) {\n      return null\n    }\n    if (nodule.parentNode == this.targetElement) {\n      // Double and triple check that we aren't throwing away a target just because it's parent is the controller root\n      if (this.targetsUsedByThisControllerFromNode(nodule).length > 0) {\n        return nodule\n      }\n      return null\n    }\n    return null\n  }\n\n  private targetAdded(name: string, node: Node, trigger: string) {\n    let targetCallback = `${name}TargetAdded`\n    this.controller[targetCallback] && method(this.controller, targetCallback).call(this.controller, node)\n    this.log('targetAdded', { target: name, node, trigger })\n  }\n\n  private targetRemoved(name: string, node: Node, trigger: string) {\n    let targetCallback = `${name}TargetRemoved`\n    this.controller[targetCallback] && method(this.controller, targetCallback).call(this.controller, node)\n    this.log('targetRemoved', { target: name, node, trigger })\n  }\n\n  private targetChanged(name: string, node: Node, trigger: string) {\n    let targetCallback = `${name}TargetChanged`\n    this.controller[targetCallback] && method(this.controller, targetCallback).call(this.controller, node)\n    this.log('targetChanged', { target: name, node, trigger })\n  }\n\n  private targetsUsedByThisControllerFromNode(node: Node): string[] {\n    if (node.nodeName == \"#text\" || node.nodeName == \"#comment\") {\n      // Failsafe, just in case we try processing a text or comment node\n      return []\n    }\n    // Extracts from the node, the target string, targetsUsedByThisController filters it, returns the array of supported target names\n    let nodeElement = node as Element\n    return this.targetsUsedByThisController(nodeElement.getAttribute(this.scopedTargetSelector) || nodeElement.getAttribute(this.targetSelector))\n  }\n\n  private targetsUsedByThisController(targetStr: string | null) {\n    // Filters out any targets that don't belong to this  controller and returns the array of supported target names\n    targetStr = targetStr || ''\n    let targetsToCheck = this.stripIdentifierPrefix(targetStr).split(' ')\n    return this.targets.filter((n) => targetsToCheck.indexOf(n) !== -1)\n  }\n\n  private stripIdentifierPrefix(target: string): string {\n    return target.replace(new RegExp(this.identifierPrefix, 'g'), '')\n  }\n\n  private enhanceController() {\n    const controllerDisconnect = this.controller.disconnect.bind(this.controller)\n    const disconnect = () => {\n      this.unobserve()\n      controllerDisconnect()\n    }\n    Object.assign(this.controller, { disconnect })\n  }\n}\n\nexport const useTargetMutation = (controller: TargetMutationComposableController, options: TargetMutationOptions = {}) => {\n  const observer = new UseTargetMutation(controller, options)\n  return [observer.observe, observer.unobserve]\n}\n","import { Context, Controller } from 'stimulus'\nimport { TargetMutationOptions, useTargetMutation } from './use-target-mutation'\n\nexport class TargetMutationComposableController extends Controller {\n  [index: string]: any;\n}\n\nexport class TargetMutationController extends TargetMutationComposableController {\n\n  options!: TargetMutationOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useTargetMutation(this, this.options)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n\n}\n","import { WindowResizeComposableController } from './window-resize-controller'\nimport { method } from '../support/index'\n\nexport interface WindowResizePayload {\n  height: number,\n  width: number,\n  event?: Event\n}\n\nexport const useWindowResize = (controller: WindowResizeComposableController) => {\n\n  const callback = (event?: Event) => {\n    const { innerWidth, innerHeight } = window\n\n    const payload: WindowResizePayload = {\n      height: innerHeight || Infinity,\n      width: innerWidth || Infinity,\n      event\n    }\n\n    method(controller, 'windowResize').call(controller, payload)\n  }\n\n  const controllerDisconnect = controller.disconnect.bind(controller)\n\n  const observe = () => {\n    window.addEventListener('resize', callback)\n    callback()\n  }\n\n  const unobserve = () => {\n    window.removeEventListener('resize', callback)\n  }\n\n  Object.assign(controller, {\n    disconnect() {\n      unobserve()\n      controllerDisconnect()\n    },\n  })\n\n  observe()\n\n  return [observe, unobserve] as const\n}\n","import { Controller, Context } from 'stimulus'\nimport { useWindowResize, WindowResizePayload } from './use-window-resize'\n\nexport class WindowResizeComposableController extends Controller {\n  declare windowResize?: (payload: WindowResizePayload) => void\n}\n\nexport class WindowResizeController extends WindowResizeComposableController {\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      const [observe, unobserve] = useWindowResize(this)\n      Object.assign(this, { observe, unobserve })\n    })\n  }\n\n  declare observe: () => void\n  declare unobserve: () => void\n\n}\n","import { Controller } from 'stimulus'\n\nexport interface DebounceOptions {\n  wait?: number\n  name?: string\n}\n\nclass DebounceController extends Controller {\n  static debounces: string[] | DebounceOptions[] = []\n}\n\nconst defaultWait = 200\n\nconst debounce = (fn: Function, wait: number = defaultWait) => {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null\n\n  return function (this: any): any {\n    const args = arguments;\n    const context = this;\n\n    const callback = () => fn.apply(context, args)\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = setTimeout(callback, wait)\n  }\n}\n\nexport const useDebounce = (controller: DebounceController, options: DebounceOptions) => {\n  const constructor = controller.constructor as any\n\n  constructor.debounces?.forEach((func: string | DebounceOptions) => {\n    if (typeof func === \"string\") {\n      (controller as any)[func] = debounce((controller as any)[func] as Function, options?.wait)\n    }\n\n    if (typeof func === \"object\") {\n      const { name, wait } = func as DebounceOptions\n      if (!name) return\n      (controller as any)[name] = debounce((controller as any)[name] as Function, wait || options?.wait)\n    }\n  })\n}\n","import { Controller } from 'stimulus'\n\nexport interface ThrottleOptions {\n  wait?: number\n  name?: string\n}\n\nclass ThrottleController extends Controller {\n  static throttles: string[] | ThrottleOptions[] = []\n}\n\nconst defaultWait = 200\n\nexport function throttle(func: Function, wait: number = defaultWait): Function {\n  let inThrottle: boolean;\n\n  return function (this: any): any {\n    const args = arguments;\n    const context = this;\n\n    if (!inThrottle) {\n      inThrottle = true;\n      func.apply(context, args);\n      setTimeout(() => (inThrottle = false), wait);\n    }\n  };\n}\n\nexport const useThrottle = (controller: ThrottleController, options: ThrottleOptions = {}) => {\n  const constructor = controller.constructor as any\n\n  constructor.throttles?.forEach((func: string | ThrottleOptions) => {\n    if (typeof func === \"string\") {\n      (controller as any)[func] = throttle((controller as any)[func] as Function, options?.wait)\n    }\n\n    if (typeof func === \"object\") {\n      const { name, wait } = func as ThrottleOptions\n      if (!name) return\n      (controller as any)[name] = throttle((controller as any)[name] as Function, wait || options?.wait)\n    }\n  })\n}\n","import { Controller } from 'stimulus'\n\nexport interface MetaOptions {\n  suffix: boolean\n}\n\nconst defineMetaGetter = (controller: Controller, metaName: string, suffix: boolean) => {\n  const getterName = suffix ? `${camelize(metaName)}Meta` : camelize(metaName)\n\n  Object.defineProperty(controller, getterName, {\n    get(): any {\n      return typeCast(metaValue(metaName))\n    },\n  })\n}\n\nfunction metaValue(name: string) {\n  const element = document.head.querySelector(`meta[name=\"${name}\"]`)\n  return element && element.getAttribute('content')\n}\n\nfunction typeCast(value: any): any {\n  try {\n    return JSON.parse(value)\n  } catch (o_O) {\n    return value\n  }\n}\n\nfunction camelize(value: string) {\n  return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase())\n}\n\nexport const useMeta = (controller: Controller, options: MetaOptions = { suffix: true }) => {\n  const metaNames = (controller.constructor as any).metaNames\n  const suffix = options.suffix\n\n  // defines the individual meta getters\n  metaNames?.forEach((metaName: string) => {\n    defineMetaGetter(controller, metaName, suffix)\n  })\n\n  // define the metas getter to retreive an object with all metas\n  Object.defineProperty(controller, \"metas\", {\n    get(): Record<string, any> {\n      const result: Record<string, any> = {}\n\n      metaNames?.forEach((metaName: string) => {\n        const value = typeCast(metaValue(metaName))\n        if (value !== undefined && value !== null) {\n          result[camelize(metaName)] = value\n        }\n      })\n      return result\n    },\n  })\n}\n","import { TransitionComposableController } from './transition-controller'\n\nexport interface TransitionOptions {\n  element?: Element\n  transitioned?: boolean\n  enterActive?: string\n  enterFrom?: string\n  enterTo?: string\n  leaveActive?: string\n  leaveFrom?: string\n  leaveTo?: string\n  hiddenClass?: string\n  leaveAfter?: number\n  preserveOriginalClass?: boolean\n  removeToClasses?: boolean\n}\n\nconst alpineNames: object = {\n  enterFromClass: \"enter\",\n  enterActiveClass: \"enterStart\",\n  enterToClass: \"enterEnd\",\n  leaveFromClass: \"leave\",\n  leaveActiveClass: \"leaveStart\",\n  leaveToClass: \"leaveEnd\",\n}\n\nconst defaultOptions = {\n  transitioned: false,\n  hiddenClass: \"hidden\",\n  preserveOriginalClass: true,\n  removeToClasses: true\n}\n\nexport const useTransition = (controller: TransitionComposableController, options: TransitionOptions = {}) => {\n  const targetName = (controller.element as HTMLElement).dataset.transitionTarget\n  let targetFromAttribute\n\n  if (targetName) {\n    targetFromAttribute = (controller as any)[`${targetName}Target`]\n  }\n\n  const targetElement = options?.element || targetFromAttribute || controller.element\n\n  // data attributes are only available on HTMLElement and SVGElement\n  if (!((targetElement instanceof HTMLElement) || (targetElement instanceof SVGElement))) return\n  const dataset = targetElement.dataset\n\n  const leaveAfter = parseInt(dataset.leaveAfter || \"\") || options.leaveAfter || 0\n\n  const { transitioned, hiddenClass, preserveOriginalClass, removeToClasses } = Object.assign(defaultOptions, options)\n\n  const controllerEnter = controller.enter?.bind(controller)\n  const controllerLeave = controller.leave?.bind(controller)\n  const controllerToggleTransition = controller.toggleTransition?.bind(controller)\n\n  async function enter(event?: Event) {\n    if (controller.transitioned) return\n\n    controller.transitioned = true\n    controllerEnter && controllerEnter(event)\n\n    const enterFromClasses = getAttribute(\"enterFrom\", options, dataset)\n    const enterActiveClasses = getAttribute(\"enterActive\", options, dataset)\n    const enterToClasses = getAttribute(\"enterTo\", options, dataset)\n    const leaveToClasses = getAttribute(\"leaveTo\", options, dataset)\n\n    if (!!hiddenClass) {\n      targetElement.classList.remove(hiddenClass)\n    }\n\n    if (!removeToClasses) {\n      removeClasses(targetElement, leaveToClasses)\n    }\n    await transition(targetElement, enterFromClasses, enterActiveClasses, enterToClasses, hiddenClass, preserveOriginalClass, removeToClasses)\n\n    if (leaveAfter > 0) {\n      setTimeout(() => {\n        leave(event)\n      }, leaveAfter)\n    }\n  }\n\n  async function leave(event?: Event) {\n    if (!controller.transitioned) return\n    controller.transitioned = false\n    controllerLeave && controllerLeave(event)\n\n    const leaveFromClasses = getAttribute(\"leaveFrom\", options, dataset)\n    const leaveActiveClasses = getAttribute(\"leaveActive\", options, dataset)\n    const leaveToClasses = getAttribute(\"leaveTo\", options, dataset)\n    const enterToClasses = getAttribute(\"enterTo\", options, dataset)\n\n    if (!removeToClasses) {\n      removeClasses(targetElement, enterToClasses)\n    }\n\n    await transition(targetElement, leaveFromClasses, leaveActiveClasses, leaveToClasses, hiddenClass, preserveOriginalClass, removeToClasses)\n\n    if (!!hiddenClass) {\n      targetElement.classList.add(hiddenClass)\n    }\n  }\n\n  function toggleTransition(event: Event) {\n    controllerToggleTransition && controllerToggleTransition(event)\n\n    if (controller.transitioned) {\n      leave()\n    } else {\n      enter()\n    }\n  }\n\n  async function transition(element: Element, initialClasses: string[], activeClasses: string[], endClasses: string[], hiddenClass: string, preserveOriginalClass: boolean, removeEndClasses: boolean) {\n\n    // if there's any overlap between the current set of classes and initialClasses/activeClasses/endClasses,\n    // we should remove them before we start and add them back at the end\n    const stashedClasses: string[] = []\n    if (preserveOriginalClass) {\n      initialClasses.forEach(cls => element.classList.contains(cls) && cls !== hiddenClass && stashedClasses.push(cls))\n      activeClasses.forEach(cls => element.classList.contains(cls) && cls !== hiddenClass && stashedClasses.push(cls))\n      endClasses.forEach(cls => element.classList.contains(cls) && cls !== hiddenClass && stashedClasses.push(cls))\n    }\n\n\n    // Add initial class before element start transition\n    addClasses(element, initialClasses);\n\n    // remove the overlapping classes\n    removeClasses(element, stashedClasses)\n\n    // Add active class before element start transition and maitain it during the entire transition.\n    addClasses(element, activeClasses)\n    await nextAnimationFrame();\n\n    // remove the initial class on frame after the beginning of the transition\n    removeClasses(element, initialClasses)\n\n    // add the endClass on frame after the beginning of the transition\n    addClasses(element, endClasses);\n\n    // dynamically comput the duration of the transition from the style of the element\n    await afterTransition(element);\n\n    // remove both activeClasses and endClasses\n    removeClasses(element, activeClasses)\n    if (removeEndClasses) {\n      removeClasses(element, endClasses)\n    }\n\n    // restore the overlaping classes\n    addClasses(element, stashedClasses)\n  }\n\n  function initialState() {\n    controller.transitioned = transitioned\n    if (transitioned) {\n      if (!!hiddenClass) {\n        targetElement.classList.remove(hiddenClass)\n      }\n      enter()\n    } else {\n      if (!!hiddenClass) {\n        targetElement.classList.add(hiddenClass)\n      }\n      leave()\n    }\n  }\n\n  function addClasses(element: Element, classes: string[]) {\n    if (classes.length > 0) {\n      element.classList.add(...classes);\n    }\n  }\n\n  function removeClasses(element: Element, classes: string[]) {\n    if (classes.length > 0) {\n      element.classList.remove(...classes);\n    }\n  }\n\n  initialState()\n  Object.assign(controller, { enter, leave, toggleTransition })\n  return [enter, leave, toggleTransition]\n}\n\nfunction getAttribute(name: string, options: TransitionOptions, dataset: DOMStringMap): string[] {\n  const datasetName = `transition${name[0].toUpperCase()}${name.substr(1)}`\n  const datasetAlpineName = (alpineNames as any)[name]\n  const classes = (options as any)[name] || dataset[datasetName] || dataset[datasetAlpineName] || \" \"\n  return isEmpty(classes) ? [] : classes.split(\" \")\n}\n\nasync function afterTransition(element: Element): Promise<number> {\n  return new Promise(resolve => {\n    const duration = Number(\n      getComputedStyle(element)\n        .transitionDuration\n        .split(\",\")[0]\n        .replace('s', '')\n    ) * 1000\n    setTimeout(() => {\n      resolve(duration)\n    }, duration)\n  });\n}\n\nasync function nextAnimationFrame() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(resolve);\n    });\n  });\n}\n\nfunction isEmpty(str: string): boolean {\n  return (str.length === 0 || !str.trim());\n}\n","import { Controller, Context } from 'stimulus'\nimport { useTransition, TransitionOptions } from './use-transition'\n\nexport class TransitionComposableController extends Controller {\n  transitioned: boolean = false\n\n  declare enter?: (event: Event | undefined) => void\n  declare leave?: (event: Event | undefined) => void\n  declare toggleTransition?: (event: Event | undefined) => void\n}\n\nexport class TransitionController extends TransitionComposableController {\n  options?: TransitionOptions\n\n  constructor(context: Context) {\n    super(context)\n    requestAnimationFrame(() => {\n      useTransition(this, this.options)\n    })\n  }\n}\n","import { Controller } from 'stimulus'\n\nconst memoize = (controller: Controller, name: string, value: any) => {\n  Object.defineProperty(controller, name, { value })\n  return value\n}\n\nexport const useMemo = (controller: Controller) => {\n  (controller.constructor as any).memos?.forEach((getter: string) => {\n    memoize(controller, getter, (controller as any)[getter])\n  })\n}\n"],"names":["method","controller","methodName","composeEventName","name","eventPrefix","composedName","identifier","extendedEvent","type","event","detail","bubbles","cancelable","composed","Object","assign","originalEvent","CustomEvent","defaultOptions","dispatchEvent","useIntersection","options","targetElement","element","controllerDisconnect","disconnect","bind","observer","IntersectionObserver","entries","entry","isIntersecting","isVisible","call","eventName","appearEvent","dispatchAppear","disappearEvent","dispatchDisappear","observe","unobserve","IntersectionController","context","_this2","requestAnimationFrame","Controller","useLazyLoad","isLoaded","src","data","get","imageElement","isLoading","onload","handleLoaded","handleAppear","LazyLoadController","rootMargin","_this","useResize","ResizeObserver","contentRect","ResizeController","events","onlyVisible","useClickOutside","onEvent","rect","windowHeight","windowWidth","contains","target","getBoundingClientRect","window","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","top","height","left","width","clickOutside","clickOutsideEvent","forEach","addEventListener","removeEventListener","ClickOutsideController","debug","logger","console","StimulusUse","this","functionName","args","groupCollapsed","log","controllerId","groupEnd","details","eventDetails","customEvent","_options","application","stimulusUseDebug","_options2","id","dataset","controllerInitialize","initialize","controllerConnect","connect","UseDispatch","eventNameWithPrefix","enhanceController","dispatch","useDispatch","useApplication","defineProperty","hasAttribute","metaValue","head","querySelector","getAttribute","ApplicationController","ms","initialState","useIdle","isIdle","timeout","setTimeout","dispatchAway","dispatchBack","clearTimeout","onVisibility","hidden","IdleController","UseVisibility","handleVisibilityChange","becomesInvisible","becomesVisible","useVisibility","VisibilityController","UseHover","onEnter","onLeave","hover","useHover","HoverController","UseMutation","error","handleError","MutationObserver","mutation","useMutation","MutationController","UseTargetMutation","subtree","characterData","childList","attributes","attributeOldValue","attributeFilter","targetSelector","scopedTargetSelector","newValue","attributeName","oldTargets","targetsUsedByThisController","oldValue","newTargets","removedTargets","filter","includes","addedTargets","targetRemoved","stripIdentifierPrefix","targetAdded","nodule","findTargetInAncestry","targetsUsedByThisControllerFromNode","targetChanged","removedNodes","addedNodes","node","processNodeDOMMutation","scope","identifierPrefix","schema","targetAttribute","targets","constructor","prefixedTargets","map","initialChangeModeAssumption","change","supportedTargets","nodeName","length","parentNode","trigger","targetCallback","nodeElement","targetStr","targetsToCheck","split","n","indexOf","replace","RegExp","_this3","useTargetMutation","TargetMutationController","useWindowResize","callback","payload","Infinity","WindowResizeController","debounce","fn","wait","timeoutId","arguments","apply","throttle","func","inThrottle","typeCast","value","JSON","parse","o_O","camelize","_","char","toUpperCase","useMeta","alpineNames","enterFromClass","enterActiveClass","enterToClass","leaveFromClass","leaveActiveClass","leaveToClass","transitioned","hiddenClass","preserveOriginalClass","removeToClasses","useTransition","transition","initialClasses","activeClasses","endClasses","removeEndClasses","stashedClasses","cls","classList","push","addClasses","removeClasses","Promise","resolve","nextAnimationFrame","duration","Number","getComputedStyle","transitionDuration","afterTransition","leave","controllerLeave","leaveFromClasses","leaveActiveClasses","leaveToClasses","enterToClasses","add","enter","controllerEnter","enterFromClasses","enterActiveClasses","remove","leaveAfter","targetFromAttribute","targetName","transitionTarget","HTMLElement","SVGElement","parseInt","_controller$enter","_controller$leave","controllerToggleTransition","toggleTransition","_controller$toggleTra","classes","str","datasetName","substr","trim","TransitionController","debounces","memos","getter","memoize","suffix","metaNames","metaName","getterName","defineMetaGetter","result","throttles"],"mappings":"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"}